#ifndef _CIDELSA_CHAR_H
#define _CIDELSA_CHAR_H

#define ALPHA_COLOR1 0x6000 
#define ALPHA_COLOR2 0x4000 
#define ALPHA_COLOR3 0xE000 
#define ALPHA_COLOR4 0xC000 
#define NUMBER_COLOR1 0x6000 
#define NUMBER_COLOR2 0x4000 
#define NUMBER_COLOR3 0xE000 
#define NUMBER_COLOR4 0xC000 

// Color definition with textcolordefinition(3)
// BLACK 0x0000
// BLUE 0x2000
// GREEN 0x4000
// CYAN 0x6000
// RED 0x8000
// MAGENTA 0xA000
// YELLOW 0xC000
// WHITE 0xE000

//character_set header
#ifdef __CIDELSA__
static const uint8_t shape_alpha[] =
{
    0,    // First byte is the '3rd' color bit for following lines one bit per line, b7 for first line
    0x00, 0x1F, 0x28, 0x28, 0x28, 0x3F, 0x1F, 0x00,  //A
    0,
    0x00, 0x16, 0x29, 0x29, 0x29, 0x3F, 0x3F, 0x00,  //B
    0, 
    0x00, 0x12, 0x21, 0x21, 0x21, 0x3F, 0x1E, 0x00,  //C
    0, 
    0x00, 0x1E, 0x21, 0x21, 0x21, 0x3F, 0x3F, 0x00,  //D
    0, 
    0x00, 0x21, 0x21, 0x29, 0x29, 0x3F, 0x3F, 0x00,  //E
    0,
    0x00, 0x20, 0x20, 0x28, 0x28, 0x3F, 0x3F, 0x00,  //F
    0,
    0x00, 0x16, 0x25, 0x21, 0x21, 0x3F, 0x1E, 0x00,  //G
    0, 
    0x00, 0x3F, 0x08, 0x08, 0x08, 0x3F, 0x3F, 0x00,  //H
    0, 
    0x00, 0x00, 0x21, 0x3F, 0x3F, 0x21, 0x00, 0x00,  //I
    0, 
    0x00, 0x3E, 0x3F, 0x01, 0x01, 0x01, 0x02, 0x00,  //J
    0, 
    0x00, 0x00, 0x21, 0x12, 0x0C, 0x3F, 0x3F, 0x00,  //K
    0, 
    0x00, 0x00, 0x01, 0x01, 0x01, 0x3F, 0x3F, 0x00,  //L
    0, 
    0x00, 0x3F, 0x10, 0x08, 0x10, 0x3F, 0x3F, 0x00,  //M
    0, 
    0x00, 0x3F, 0x04, 0x08, 0x10, 0x3F, 0x3F, 0x00,  //N
    0, 
    0x00, 0x1E, 0x21, 0x21, 0x21, 0x3F, 0x1E, 0x00,  //O
    0, 
    0x00, 0x10, 0x28, 0x28, 0x28, 0x3F, 0x3F, 0x00,  //P
    0, 
    0x00, 0x1E, 0x21, 0x27, 0x21, 0x3F, 0x1E, 0x00,  //Q
    0, 
    0x00, 0x11, 0x2A, 0x2C, 0x28, 0x3F, 0x3F, 0x00,  //R
    0, 
    0x00, 0x26, 0x2F, 0x29, 0x29, 0x39, 0x11, 0x00,  //S
    0, 
    0x00, 0x20, 0x20, 0x3F, 0x3F, 0x20, 0x20, 0x00,  //T
    0, 
    0x00, 0x3E, 0x01, 0x01, 0x01, 0x3F, 0x3E, 0x00,  //U
    0, 
    0x00, 0x30, 0x0C, 0x03, 0x0F, 0x3C, 0x30, 0x00,  //V
    0, 
    0x30, 0x0C, 0x03, 0x0C, 0x03, 0x0F, 0x3C, 0x30,  //W
    0, 
    0x00, 0x33, 0x14, 0x08, 0x14, 0x33, 0x33, 0x00,  //X
    0,
    0x00, 0x20, 0x10, 0x0F, 0x1F, 0x30, 0x20, 0x00,  //Y
    0,
    0x00, 0x31, 0x31, 0x29, 0x25, 0x23, 0x23, 0x00,  //Z
};

static const uint8_t shape_numbers[] =
{
    0,    
    0x1E, 0x21, 0x21, 0x21, 0x1E, 0x00, 0x00, 0x00,  //0
    0, 
    0x01, 0x3F, 0x21, 0x11, 0x01, 0x00, 0x00, 0x00,  //1
    0, 
    0x11, 0x29, 0x25, 0x25, 0x13, 0x00, 0x00, 0x00,  //2
    0, 
    0x16, 0x29, 0x29, 0x21, 0x21, 0x00, 0x00, 0x00,  //3
    0, 
    0x04, 0x3F, 0x24, 0x14, 0x0C, 0x00, 0x00, 0x00,  //4
    0, 
    0x26, 0x29, 0x29, 0x29, 0x32, 0x00, 0x00, 0x00,  //5
    0, 
    0x26, 0x29, 0x29, 0x29, 0x1E, 0x00, 0x00, 0x00,  //6
    0, 
    0x30, 0x28, 0x24, 0x23, 0x20, 0x00, 0x00, 0x00,  //7
    0, 
    0x16, 0x29, 0x29, 0x29, 0x16, 0x00, 0x00, 0x00,  //8
    0, 
    0x1E, 0x29, 0x29, 0x29, 0x11, 0x00, 0x00, 0x00,  //9
};

static const uint8_t shape_space[] =
{
    0x00,    
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,     //space
};

void character_set(uint8_t number);

#endif

#endif // _CIDELSA_CHAR_H
